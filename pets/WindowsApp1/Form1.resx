<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACG
        DgAAAk1TRnQBSQFMAgEBBQEAASgBAAEoAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEABLwC8AG8AUoBRAEi
        AkQCbgFLAUowAAO8AvAB8QEcAUoBRAEiAUMBRANuAUswAAHuAbwB7gG8AfAB8gFzAkQCQwFEAksCbjAA
        AQcB7gO8AfEBbgFEAW0BRAFDAkQBbgFzAUswAAEHAbwC7gG8AfABSwJEAW4DRANuMAAFBwG8AUQBbgES
        AUoCRAFKAUQBbQG8MAAE7wEHAe4BbQGTAm4CRAEHAvABvDAAAe8BkgH3A+8BRAFKAXQBkwFuAUQBBwLu
        AQcwAAH3Au0D9wERAW4CSgF0AUQB7wEHAu8wAAH3BO0BkwFLAW4BSwFuAUoBSwEcAZIB7QHvMAAB7QT4
        Am4CdAFuAXMBSwFEAe0B7AHtMAAB+AJtAusBRAFuBHQCSwPsMAAB6wHqARIB6gHrAUQBSwFuAusBbgJL
        AfgC6zAAAW0DEgHqAUQBSwHqARIB6gHrAUQBSgFtAuowAAHqARMBRAETAeoBRAFKAeoBEgITAW4BSgLq
        ARIwAAFtARICEwHqAUQBSgHqAxIB6gFuAm0B6jAABBIB6gFtBOsB7ALrA+wBcwH4AXICcwLrAXMBcgJz
        AesBSgNyAbwB7gK8Ae4BBwG8Ae8BvAHzAe4B8QO8AfIBcwJKAVACmQFQAXMBcgFzAkoCcgFQAXQCEwEU
        ARMBbQETAesB7AJtBuwBcwFyAW0B+ALrAfgBSgH4AesCbQJzAXIBcwUHAe0BvAHtA+8CBwHuAgcEcwEc
        AXMBHARzAUsBcwFKAQABdAFtA+sB7QFtAu8B7QHsA+8B9wHtAewBcwFyAfQBkgNzAbwBcgJtAesBbQFy
        AnMB7QGSAewB6wHsAe0BbQHtAu8BBwHvAwcB7gF4BHMCHARzAUsBHAEPAnMB6wHsAe0B6gHsAeoCBwH3
        AesCBwLvAfcB7QISAewB8QHwAVAB6wH3AXMBSgH3AusBHAJzAfcB7wH3AbsB7QEHAesB+ALvAvcBugH3
        AZEBtAFyAVEEcwFRBHMBFAFuAUQBFQFzAewB7QH3AesBbQEQAe8BBwHvARQDBwLvAfcCQwEPARQB8AGS
        ARAC8AETAbwBbQHtAfgB7QHrAbsBEwEHAfcBBwEVAe0B7wLuAQcB9wG6AbQBkQG7AnMBeAFRAUQBFAFK
        AnMBSgESAUQBAAEOAXMBUAHtAfcB7wHsARIBDwHrAfcBFQESAe0CBwLvAfcCFQEQAREB8AHxAgcBEgEU
        AesB7wIHAW0BEgGRAQcB7gEUAe8BbQEHAe8BHAHvAQcB9wG7AfcBtAHvBHMBEAEOAW4BEAEOARMBEQEO
        Ag8CcgHtAfcB7wHqARIBEwEVAQABDgESAW0BvAIHAu8BFAEVAQ8B7wHuAfMCBwHvAfcB6wG8AfMBFAHq
        ARMBkQG6AQcBEgHtAe8BBwLvAgcBtAEHAfcBkQG6AXgCcwEVAREBDgEPAw4DAAFDAnMC9wHvAesCEwMO
        AhMB7wG8AQcC7wEVAfABEQG8Ae4B8gHzAfABvAHvAQcC8AHqAhIBrgHvAfcB7AEQAQcB7gIHARQBvAG0
        AbUB9wG0AfcBeAFyAXMDDgEQAQ8BDgEPAQ4BAAEQAfgBeAFzAfcB7wH3AUMBFQETARABDgERARQBbQHw
        AbwBBwLvARQB7gHwAvIC8wHxAfMB8QHuAfIB9AHqARQBEwGuAfcBugHrARQBQwLvAe4BFAHwAfcDuwG1
        AnMBEgEAAg4BDwERAw8BEQHqAXMBcgFzAfcB7wETAfcB7AESARUDDwEVAe8BvAEHAe8BtQFDARQC8wH0
        AfUD9AHxAfAC8wG8AeoBEgGQAbsBugH3AewBQwEUAQcBvAESArwBuwEHAbQB7wGYAXMBDgFEAg4BEAFD
        AREBQwEPAXgBcwJyAXgB9wHvARMCBwG8AQcB7wEHAREBDwHsAbwBBwHvAfcBEQEVBP8B9QH/AfUB9AL1
        AfEB8wLqAZEBtAG6AbsDugHsAesB7AHvAfcCuwG0AbUBeAEcAewDDgEUARMBcwJ4BHMBeAH3Ae8BbQIH
        BLwBQwERAesBvAEHAe8B9wMUARMDFAFDAZID/wHwAfEB8AEVApECtAG6AfcBugHvAfcBBwG8Ae8CugK7
        ARwBEwEOAUMBFQEcAXMBmAFzAZgBcwF4AnMCeAHtAfcB7wMHArwB7wEVARMB6wIHAe8B9wEVAUMBFAFD
        AhQBEQIVARMB6gFtAfUB8gH0AfMB7QGRAboBBwG6AQcB7wFuAfAB8QHrAW4BuwG0AbsBBwL0AQ4BEQES
        AvQC9QH0AfUC9AH1AfQB8wHtAfcC7wIHArwC7wHsARUC7wL3ARABFQEUAUMBFAEPAREBFAETARQC6gEU
        AeoB/wEUAZABtAG7AfcBugH3Ae8B9wHvAfcC7QEHAbsB7wEHAvUBEwEUAfQL9QLtAfcC7wYHAfcB7wL3
        Ae0BEAERARUBEwFDARABQwMUARUBFAETARUBEwEVAe0BuwG6AbsBugG0AQcB7wG7AboBtAGSAQcBuwK0
        AvUBDwEVDPUB7ALtAvcI7wL3Ae0BEARDARABEQEUARUDEgEVARQB6gEVAZEBBwG0AbsBugK7AfcBugG1
        Ae4B7wG6AbQB7wEHAvUB9AHzDPUBQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD//8A
        AgAL
</value>
  </data>
</root>